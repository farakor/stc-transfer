import { motion } from 'framer-motion'
import { useNavigate } from 'react-router-dom'
import { useState, useEffect, useMemo } from 'react'
import { useAppStore } from '@/services/store'
import { useCalculatePrice, useAllLocations } from '@/hooks/useRoutes'
import { useTelegramWebApp } from '@/hooks/useTelegramWebApp'
import { ProgressBar } from '@/components/ProgressBar'
import { NotificationToast } from '@/components/NotificationToast'
import { LoadingScreen } from '@/components/LoadingScreen'
import { LocationData } from '@/services/routeService'
import FarukBadge from '@/assets/faruk-badge.svg'

const BOOKING_STEPS = ['–Ø–∑—ã–∫', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', '–ú–∞—Ä—à—Ä—É—Ç', '–î–∞–Ω–Ω—ã–µ', '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ']

export function RouteSelection() {
  const navigate = useNavigate()
  const { webApp } = useTelegramWebApp()
  const {
    selectedVehicleType,
    fromLocation,
    toLocation,
    setFromLocation,
    setToLocation,
    setPriceCalculation,
    currentStep,
    setCurrentStep
  } = useAppStore()

  const [showNotification, setShowNotification] = useState(false)
  const [notificationMessage, setNotificationMessage] = useState('')
  const [isCalculating, setIsCalculating] = useState(false)
  const [showCustomFromInput, setShowCustomFromInput] = useState(false)
  const [showCustomToInput, setShowCustomToInput] = useState(false)
  const [customFromLocation, setCustomFromLocation] = useState('')
  const [customToLocation, setCustomToLocation] = useState('')

  const calculatePriceMutation = useCalculatePrice()
  const { data: allLocations, isLoading: locationsLoading, error: locationsError } = useAllLocations()

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞ –ª–æ–∫–∞—Ü–∏–∏
  const getLocationTypeIcon = (type: string) => {
    switch (type) {
      case 'city': return 'üèôÔ∏è'
      case 'airport': return '‚úàÔ∏è'
      case 'station': return 'üöâ'
      case 'attraction': return 'üèõÔ∏è'
      default: return 'üìç'
    }
  }

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –ª–æ–∫–∞—Ü–∏–π
  const fromLocations = useMemo(() => {
    if (!allLocations) return []

    // –î–ª—è –ø–æ–ª—è "–û—Ç–∫—É–¥–∞" –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ª–æ–∫–∞—Ü–∏–∏ + –æ–ø—Ü–∏—é "–î—Ä—É–≥–æ–µ"
    const locations = allLocations.map(loc => ({
      value: loc.name,
      label: `${getLocationTypeIcon(loc.type)} ${loc.name}`,
      type: loc.type
    }))

    return [...locations, { value: '–î—Ä—É–≥–æ–µ', label: '–î—Ä—É–≥–æ–µ', type: 'other' }]
  }, [allLocations])

  const toLocations = useMemo(() => {
    if (!allLocations) return []

    // –î–ª—è –ø–æ–ª—è "–ö—É–¥–∞" –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ª–æ–∫–∞—Ü–∏–∏ + –æ–ø—Ü–∏—é "–î—Ä—É–≥–æ–µ"
    const locations = allLocations.map(loc => ({
      value: loc.name,
      label: `${getLocationTypeIcon(loc.type)} ${loc.name}`,
      type: loc.type
    }))

    return [...locations, { value: '–î—Ä—É–≥–æ–µ', label: '–î—Ä—É–≥–æ–µ', type: 'other' }]
  }, [allLocations])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
  const isDestinationAvailable = (destination: string, vehicleType: string | null): boolean => {
    if (!vehicleType) return true

    // –ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    const restrictions: Record<string, string[]> = {
      'MICROBUS': ['–ü–æ–µ–∑–¥–∫–∞ –≤ –®–∞—Ö—Ä–∏—Å–∞–±–∑', '–ü–æ–µ–∑–¥–∫–∞ –≤ –ù—É—Ä–∞—Ç—É', '–ü–æ–µ–∑–¥–∫–∞ –≤ –•–∏–≤—É'], // Mercedes-Benz Sprinter
      'SEDAN': ['–ü–æ–µ–∑–¥–∫–∞ –≤ –®–∞—Ö—Ä–∏—Å–∞–±–∑', '–ü–æ–µ–∑–¥–∫–∞ –≤ –ù—É—Ä–∞—Ç—É', '–ü–æ–µ–∑–¥–∫–∞ –≤ –ë—É—Ö–∞—Ä—É', '–ü–æ–µ–∑–¥–∫–∞ –≤ –¢–∞—à–∫–µ–Ω—Ç', '–ü–æ–µ–∑–¥–∫–∞ –≤ –•–∏–≤—É'], // –≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å Hongqi EHS 5
      'PREMIUM': ['–ü–æ–µ–∑–¥–∫–∞ –≤ –®–∞—Ö—Ä–∏—Å–∞–±–∑', '–ü–æ–µ–∑–¥–∫–∞ –≤ –ù—É—Ä–∞—Ç—É', '–ü–æ–µ–∑–¥–∫–∞ –≤ –ë—É—Ö–∞—Ä—É', '–ü–æ–µ–∑–¥–∫–∞ –≤ –¢–∞—à–∫–µ–Ω—Ç', '–ü–æ–µ–∑–¥–∫–∞ –≤ –•–∏–≤—É'], // –≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å Hongqi EHS 9
      'MINIVAN': ['–ü–æ–µ–∑–¥–∫–∞ –≤ –•–∏–≤—É'], // Kia Carnival
      'BUS': [] // –ê–≤—Ç–æ–±—É—Å Higer - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    }

    const restrictedDestinations = restrictions[vehicleType] || []
    return !restrictedDestinations.includes(destination)
  }

  // Redirect if no vehicle selected
  useEffect(() => {
    if (!selectedVehicleType) {
      navigate('/vehicles')
    }
  }, [selectedVehicleType, navigate])

  // –û—á–∏—Å—Ç–∏—Ç—å –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–æ —Å—Ç–∞–ª–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
  useEffect(() => {
    if (toLocation && selectedVehicleType && !isDestinationAvailable(toLocation, selectedVehicleType)) {
      setToLocation('')
      setShowCustomToInput(false)
      setCustomToLocation('')

      // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      setNotificationMessage(`–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ "${toLocation}" –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞`)
      setShowNotification(true)
    }
  }, [selectedVehicleType, toLocation, setToLocation])

  const handleLocationChange = (type: 'from' | 'to', value: string) => {
    if (type === 'from') {
      if (value === '–î—Ä—É–≥–æ–µ') {
        setShowCustomFromInput(true)
        setFromLocation('')
      } else {
        setShowCustomFromInput(false)
        setFromLocation(value)
      }
    } else {
      if (value === '–î—Ä—É–≥–æ–µ') {
        setShowCustomToInput(true)
        setToLocation('')
      } else {
        setShowCustomToInput(false)
        setToLocation(value)
      }
    }

    // Haptic feedback
    if (webApp?.HapticFeedback) {
      webApp.HapticFeedback.selectionChanged()
    }
  }

  const handleCustomLocationChange = (type: 'from' | 'to', value: string) => {
    if (type === 'from') {
      setCustomFromLocation(value)
      setFromLocation(value)
    } else {
      setCustomToLocation(value)
      setToLocation(value)
    }
  }



  const handleCalculatePrice = async () => {
    if (!fromLocation || !toLocation || !selectedVehicleType) {
      setNotificationMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è')
      setShowNotification(true)
      return
    }

    setIsCalculating(true)

    try {
      const calculation = await calculatePriceMutation.mutateAsync({
        fromLocation,
        toLocation,
        vehicleType: selectedVehicleType
      })

      setPriceCalculation(calculation)
      setCurrentStep(2)
      navigate('/booking')

      if (webApp?.HapticFeedback) {
        webApp.HapticFeedback.notificationOccurred('success')
      }
    } catch (error) {
      setNotificationMessage('–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
      setShowNotification(true)

      if (webApp?.HapticFeedback) {
        webApp.HapticFeedback.notificationOccurred('error')
      }
    } finally {
      setIsCalculating(false)
    }
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  if (locationsLoading) {
    return <LoadingScreen />
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–∫–∞—Ü–∏–∏
  if (locationsError) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50 px-4">
        <div className="text-center">
          <h1 className="text-xl font-semibold text-gray-900 mb-2">
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
          </h1>
          <p className="text-gray-600 mb-4">
            –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ª–æ–∫–∞—Ü–∏–π
          </p>
          <button
            onClick={() => window.location.reload()}
            className="btn-primary"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary-50 to-accent-50 px-4 py-8">
      <motion.div
        className="max-w-lg mx-auto"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        {/* Progress Bar */}
        <ProgressBar
          steps={BOOKING_STEPS}
          currentStep={currentStep}
          className="mb-8"
        />

        {/* Header */}
        <div className="text-center mb-8">
          <motion.h1
            className="text-3xl font-bold text-gray-900 mb-2"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 }}
          >
            –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç
          </motion.h1>
          <motion.p
            className="text-gray-600"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3 }}
          >
            –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
          </motion.p>
        </div>

        {/* Route Form */}
        <motion.div
          className="bg-white rounded-2xl shadow-card p-6 mb-6"
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.4 }}
        >
          {/* From Location */}
          <div className="mb-4">
            <label className="label">–û—Ç–∫—É–¥–∞</label>
            <select
              value={showCustomFromInput ? '–î—Ä—É–≥–æ–µ' : fromLocation}
              onChange={(e) => handleLocationChange('from', e.target.value)}
              className="input"
            >
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</option>
              {fromLocations.map((location) => (
                <option key={location.value} value={location.value}>
                  {location.label}
                </option>
              ))}
            </select>
            {showCustomFromInput && (
              <input
                type="text"
                value={customFromLocation}
                onChange={(e) => handleCustomLocationChange('from', e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
                className="input mt-2"
              />
            )}
          </div>

          {/* To Location */}
          <div className="mb-6">
            <label className="label">–ö—É–¥–∞</label>
            <select
              value={showCustomToInput ? '–î—Ä—É–≥–æ–µ' : toLocation}
              onChange={(e) => handleLocationChange('to', e.target.value)}
              className="input"
            >
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è</option>
              {toLocations.map((location) => {
                const isAvailable = isDestinationAvailable(location.value, selectedVehicleType)
                return (
                  <option
                    key={location.value}
                    value={location.value}
                    disabled={!isAvailable}
                    style={{
                      color: isAvailable ? 'inherit' : '#999',
                      backgroundColor: isAvailable ? 'inherit' : '#f5f5f5'
                    }}
                  >
                    {location.label} {!isAvailable ? '(–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)' : ''}
                  </option>
                )
              })}
            </select>
            {showCustomToInput && (
              <input
                type="text"
                value={customToLocation}
                onChange={(e) => handleCustomLocationChange('to', e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è"
                className="input mt-2"
              />
            )}
          </div>

          {/* Calculate Price Button */}
          <button
            onClick={handleCalculatePrice}
            disabled={isCalculating || !fromLocation || !toLocation}
            className="btn-primary w-full"
          >
            {isCalculating ? (
              <div className="flex items-center justify-center space-x-2">
                <div className="loading-spinner"></div>
                <span>–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏...</span>
              </div>
            ) : (
              '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å'
            )}
          </button>
        </motion.div>

        {/* Back Button */}
        <motion.div
          className="mt-8 text-center"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
        >
          <button
            onClick={() => navigate('/vehicles')}
            className="text-gray-500 hover:text-gray-700 transition-colors duration-200"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
          </button>
        </motion.div>

        {/* Footer */}
        <motion.div
          className="text-center mt-8 space-y-4"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1.0 }}
        >
          <div className="flex flex-col items-center">
            <p className="text-xs text-gray-400 mb-2">Developed by</p>
            <img src={FarukBadge} alt="Faruk" className="h-6 w-auto" />
          </div>
        </motion.div>
      </motion.div>

      {/* Notification Toast */}
      <NotificationToast
        message={notificationMessage}
        type="error"
        isVisible={showNotification}
        onClose={() => setShowNotification(false)}
      />
    </div>
  )
}
