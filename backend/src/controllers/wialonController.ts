import { Request, Response } from 'express'
import { wialonService } from '@/services/wialonService'

export class WialonController {
  // GET /api/wialon/units - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –µ–¥–∏–Ω–∏—Ü—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏–∑ Wialon
  static async getUnits(req: Request, res: Response): Promise<void> {
    try {
      console.log('üöå –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –µ–¥–∏–Ω–∏—Ü —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏–∑ Wialon...')
      
      const units = await wialonService.getUnits()
      
      res.json({
        success: true,
        data: units,
        total: units.length
      })
    } catch (error) {
      console.error('‚ùå Error fetching Wialon units:', error)
      res.status(500).json({
        success: false,
        error: 'Failed to fetch Wialon units',
        message: error instanceof Error ? error.message : 'Unknown error'
      })
    }
  }

  // GET /api/wialon/units/:unitId - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–µ
  static async getUnitById(req: Request, res: Response): Promise<void> {
    try {
      const { unitId } = req.params
      console.log(`üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Wialon unit ${unitId}...`)
      
      const unit = await wialonService.getUnitById(unitId)
      
      if (!unit) {
        res.status(404).json({
          success: false,
          error: 'Wialon unit not found'
        })
        return
      }
      
      res.json({
        success: true,
        data: unit
      })
    } catch (error) {
      console.error('‚ùå Error fetching Wialon unit:', error)
      res.status(500).json({
        success: false,
        error: 'Failed to fetch Wialon unit',
        message: error instanceof Error ? error.message : 'Unknown error'
      })
    }
  }

  // GET /api/wialon/units/:unitId/position - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –µ–¥–∏–Ω–∏—Ü—ã
  static async getUnitPosition(req: Request, res: Response): Promise<void> {
    try {
      const { unitId } = req.params
      console.log(`üìç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ Wialon unit ${unitId}...`)
      
      const position = await wialonService.getUnitPosition(unitId)
      
      if (!position) {
        res.status(404).json({
          success: false,
          error: 'Position not available for this unit'
        })
        return
      }
      
      res.json({
        success: true,
        data: position
      })
    } catch (error) {
      console.error('‚ùå Error fetching unit position:', error)
      res.status(500).json({
        success: false,
        error: 'Failed to fetch unit position',
        message: error instanceof Error ? error.message : 'Unknown error'
      })
    }
  }

  // POST /api/wialon/login - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Wialon (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  static async login(req: Request, res: Response): Promise<void> {
    try {
      console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Wialon...')
      
      const sessionId = await wialonService.login()
      
      res.json({
        success: true,
        data: {
          sessionId
        }
      })
    } catch (error) {
      console.error('‚ùå Error logging into Wialon:', error)
      res.status(500).json({
        success: false,
        error: 'Failed to login to Wialon',
        message: error instanceof Error ? error.message : 'Unknown error'
      })
    }
  }

  // POST /api/wialon/logout - –í—ã—Ö–æ–¥ –∏–∑ Wialon
  static async logout(req: Request, res: Response): Promise<void> {
    try {
      console.log('üëã –í—ã—Ö–æ–¥ –∏–∑ Wialon...')
      
      await wialonService.logout()
      
      res.json({
        success: true,
        message: 'Logged out successfully'
      })
    } catch (error) {
      console.error('‚ùå Error logging out from Wialon:', error)
      res.status(500).json({
        success: false,
        error: 'Failed to logout from Wialon',
        message: error instanceof Error ? error.message : 'Unknown error'
      })
    }
  }
}

