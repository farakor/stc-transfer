const fetch = require('node-fetch');

const API_BASE = 'http://localhost:3001/api';

async function testAPI() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...\n');

    try {
        // 1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞...');
        const createResponse = await fetch(`${API_BASE}/bookings`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                telegramId: 12345,
                fromLocation: '–°–∞–º–∞—Ä–∫–∞–Ω–¥',
                toLocation: '–¢–∞—à–∫–µ–Ω—Ç',
                vehicleType: 'SEDAN',
                notes: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞',
                distanceKm: 280
            })
        });

        const createResult = await createResponse.json();
        console.log('üìù –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è:', createResult);

        if (!createResult.success) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞');
            return;
        }

        console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', createResult.data.id);

        // 2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤...');
        const activeResponse = await fetch(`${API_BASE}/bookings/active`);
        const activeResult = await activeResponse.json();
        
        console.log('üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã:', activeResult);
        
        if (activeResult.success && activeResult.data) {
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${activeResult.data.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤`);
            activeResult.data.forEach((booking, index) => {
                console.log(`   ${index + 1}. ID: ${booking.id.slice(0,8)}... | ${booking.fromLocation} ‚Üí ${booking.toLocation} | –°—Ç–∞—Ç—É—Å: ${booking.status}`);
            });
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã');
        }

        // 3. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        console.log('\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        const statsResponse = await fetch(`${API_BASE}/bookings/stats`);
        const statsResult = await statsResponse.json();
        
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', statsResult);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAPI();
