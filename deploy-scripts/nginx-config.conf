# Конфигурация Nginx для STC Transfer
# Разместить в: /etc/nginx/sites-available/srs.faruk.io

# Backend API и WebSocket
upstream backend {
    server localhost:3001;
    keepalive 64;
}

server {
    listen 80;
    server_name srs.faruk.io;

    # Увеличиваем размер загружаемых файлов
    client_max_body_size 50M;

    # Логи
    access_log /var/log/nginx/stc-access.log;
    error_log /var/log/nginx/stc-error.log;

    # Frontend - статические файлы
    root /home/stc/apps/stc-transfer/frontend/dist;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss application/json
               application/x-javascript application/xml font/woff font/woff2 
               application/font-woff application/font-woff2 image/svg+xml;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Frontend статика - с кешированием
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # HTML файлы не кешируем
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # API прокси к backend
    location /api {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Socket.IO WebSocket
    location /socket.io {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        # WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Длительные таймауты для WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # Отключаем буферизацию
        proxy_buffering off;
    }

    # Telegram Webhook - ограничиваем доступ
    location /api/telegram {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Ограничиваем доступ только для Telegram серверов
        # https://core.telegram.org/bots/webhooks#the-short-version
        allow 149.154.160.0/20;
        allow 91.108.4.0/22;
        deny all;
        
        # Таймауты
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Публичные файлы (если есть)
    location /public {
        alias /home/stc/apps/stc-transfer/backend/public;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Frontend SPA - все остальные запросы
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Блокировка доступа к скрытым файлам
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Блокировка доступа к .env и другим конфиг файлам
    location ~* \.(env|git|gitignore|htaccess|htpasswd)$ {
        deny all;
    }
}

